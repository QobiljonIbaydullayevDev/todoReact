{"ast":null,"code":"var _jsxFileName = \"/home/qobiljon/Desktop/todoReact/src/components/TaskCard/TaskCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskCard = ({\n  title,\n  desc,\n  id,\n  count,\n  deleteTodoHandler,\n  isAnimated\n}) => {\n  _s();\n  const [isCompleted, setIsCompleted] = useState(false);\n  const markTodoHandler = () => {\n    setIsCompleted(!isCompleted);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: isAnimated ? \"animate__animated animate__bounce  animate__repeat-3\t3\" : \"\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      className: isCompleted ? \"text-bg-success\" : \"\",\n      children: [\"Task #\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"btn2\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        className: \"btn\",\n        onClick: markTodoHandler,\n        style: {\n          visibility: !isCompleted ? \"visible\" : \"hidden\"\n        },\n        children: \"Mark as completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          visibility: !isCompleted ? \"visible\" : \"hidden\"\n        },\n        variant: \"danger\",\n        onClick: () => {\n          deleteTodoHandler(id);\n        },\n        children: \"Delete the task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskCard, \"LITZRDMGs9gT4S6K0mtRu7r05aI=\");\n_c = TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["useState","Button","Card","jsxDEV","_jsxDEV","TaskCard","title","desc","id","count","deleteTodoHandler","isAnimated","_s","isCompleted","setIsCompleted","markTodoHandler","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","variant","onClick","style","visibility","_c","$RefreshReg$"],"sources":["/home/qobiljon/Desktop/todoReact/src/components/TaskCard/TaskCard.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\n\nexport const TaskCard = ({\n  title,\n  desc,\n  id,\n  count,\n  deleteTodoHandler,\n  isAnimated,\n}) => {\n  const [isCompleted, setIsCompleted] = useState(false);\n  const markTodoHandler = () => {\n    setIsCompleted(!isCompleted);\n  };\n  return (\n    <Card\n      className={\n        isAnimated\n          ? \"animate__animated animate__bounce  animate__repeat-3\t3\"\n          : \"\"\n      }\n    >\n      <Card.Header className={isCompleted ? \"text-bg-success\" : \"\"}>\n        Task #{count}\n      </Card.Header>\n      <Card.Body className=\"btn2\">\n        <Card.Title>{title}</Card.Title>\n        <Card.Text>{desc}</Card.Text>\n        <Button\n          variant=\"success\"\n          className=\"btn\"\n          onClick={markTodoHandler}\n          style={{ visibility: !isCompleted ? \"visible\" : \"hidden\" }}\n        >\n          Mark as completed\n        </Button>\n        <Button\n          style={{ visibility: !isCompleted ? \"visible\" : \"hidden\" }}\n          variant=\"danger\"\n          onClick={() => {\n            deleteTodoHandler(id);\n          }}\n        >\n          Delete the task\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EACvBC,KAAK;EACLC,IAAI;EACJC,EAAE;EACFC,KAAK;EACLC,iBAAiB;EACjBC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMe,eAAe,GAAGA,CAAA,KAAM;IAC5BD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EACD,oBACET,OAAA,CAACF,IAAI;IACHc,SAAS,EACPL,UAAU,GACN,wDAAwD,GACxD,EACL;IAAAM,QAAA,gBAEDb,OAAA,CAACF,IAAI,CAACgB,MAAM;MAACF,SAAS,EAAEH,WAAW,GAAG,iBAAiB,GAAG,EAAG;MAAAI,QAAA,GAAC,QACtD,EAACR,KAAK;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACdlB,OAAA,CAACF,IAAI,CAACqB,IAAI;MAACP,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACzBb,OAAA,CAACF,IAAI,CAACsB,KAAK;QAAAP,QAAA,EAAEX;MAAK;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAChClB,OAAA,CAACF,IAAI,CAACuB,IAAI;QAAAR,QAAA,EAAEV;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC7BlB,OAAA,CAACH,MAAM;QACLyB,OAAO,EAAC,SAAS;QACjBV,SAAS,EAAC,KAAK;QACfW,OAAO,EAAEZ,eAAgB;QACzBa,KAAK,EAAE;UAAEC,UAAU,EAAE,CAAChB,WAAW,GAAG,SAAS,GAAG;QAAS,CAAE;QAAAI,QAAA,EAC5D;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTlB,OAAA,CAACH,MAAM;QACL2B,KAAK,EAAE;UAAEC,UAAU,EAAE,CAAChB,WAAW,GAAG,SAAS,GAAG;QAAS,CAAE;QAC3Da,OAAO,EAAC,QAAQ;QAChBC,OAAO,EAAEA,CAAA,KAAM;UACbjB,iBAAiB,CAACF,EAAE,CAAC;QACvB,CAAE;QAAAS,QAAA,EACH;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX,CAAC;AAACV,EAAA,CA9CWP,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}